[{"question": "What are the data type of variables that can be returned by a C Function.?", "option1": "A) int, float, double, char", "option2": "B) struct, enum", "option3": "C) Pointers to variables, arrays, functions, struct variables, enum variables etc", "option4": "D) All the above", "ans": "D"}, {"question": "What is the output of a C Program with functions and pointers.?\nvoid texas(int *,int *);\nint main()\n{\n    int a=11, b=22;\n    printf(\"Before=%d %d, \", a, b);\n    texas(&a, &b);\n    printf(\"After=%d %d\", a, b);\n    \n    return 0;\n}\nvoid texas(int *i, int *j)\n{\n    *i = 55;\n    *j = 65;\n}\n", "option1": "A) Before=11 22, After=11 22", "option2": "B) Before=11 22, After=55\u00a065", "option3": "C) Before=11 22, After=0\u00a00", "option4": "D) Compiler error", "ans": "B"}, {"question": "What is the output of C Program with functions.?\nint main()\n{\n    int a = 66;\n    printf(\"%d %d %d,\\n\", a, ++a, a++);\n    a = 66;\n    printf(\"%d %d %d,\\n\", ++a, a++, a);\n    a = 66;\n    printf(\"%d %d %d\", ++a, a, a++);\n    return 0;\n}\n", "option1": "A) 68 68 66,\n68 66 66,\n68 68 66", "option2": "B) 68 68 66,\n66 66 68,\n68 68 66", "option3": "C) 68 68 66,\n68 66 68,\n68 68 66", "option4": "D) 68 68 66,\n68 66 68,\n68 68 68", "ans": "C"}, {"question": "What is the output of a C program.?\nint main()\n{\n    int a = 1;\n    printf(\"%d %d %d,\\n\", a, ++a, a++);\n    a = 1;\n    printf(\"%d %d %d,\\n\", ++a, a++, a);\n    a = 1;\n    printf(\"%d %d %d\", ++a, a, a++);\n    return 0;\n}\n", "option1": "A) 3 3 1,\n3 3 3,\n3 3 1", "option2": "B) 3 1 1,\n3 1 3,\n3 3 1", "option3": "C) 3 3 1,\n3 1 3,\n3 1 1", "option4": "D) 3 3 1,\n3 1 3,\n3 3 1", "ans": "D"}, {"question": "What is the output of a C Program.?\nvoid show(int,int,int);\nint main()\n{\n    int a = 1;\n    show(++a, a++, a);\n    return 0;\n}\nvoid show(int i, int j, int k)\n{\n    printf(\"%d %d %d,\\n\", i, j, k);\n}\n", "option1": "A) 1 1 3,", "option2": "B) 3 1 3,", "option3": "C) 3 1 1,", "option4": "D) 3 3 3,", "ans": "B"}, {"question": "What is the output of C Program with pointers.?\nint main()\n{\n    int a = 4;\n    int *p;\n    p=&a;\n    while(*p > 0)\n    {\n        printf(\"%d \", *p);\n        (*p)--;\n    }\n    return 0;\n}\n", "option1": "A) 0 0 0 0", "option2": "B) 4 4 4 4", "option3": "C) 4 3 2 1", "option4": "D) Compiler error", "ans": "C"}, {"question": "What is the output of C Program with functions.?\nvoid show();\nint show();\nint main()\n{\n    printf(\"ANT\\n\");\n    return 0;\n}\nvoid show()\n{\n     printf(\"Integer\") ;\n}\nint show()\n{\n    printf(\"Void\");\n}\n", "option1": "A) ANT", "option2": "B) Integer", "option3": "C) Void", "option4": "D) Compiler error", "ans": "D"}, {"question": "What is the output of C Program with functions.?\nvoid show(int);\nvoid show(float);\nint main()\n{\n    printf(\"ANT\\n\");\n    return 0;\n}\nvoid show(int a)\n{\n     printf(\"Integer\") ;\n}\nvoid show(float b)\n{\n    printf(\"Void\");\n}\n", "option1": "A) Integer Void", "option2": "B) ANT Integer Void", "option3": "C) ANT", "option4": "D) Compiler error", "ans": "D"}, {"question": "What is the output of C Program with pointers.?\nint main()\n{\n    int a=10;\n    int *p, **q;\n    p=&a;\n    q=&p;\n    printf(\"%d \", a);\n    *p=15;\n    printf(\"%d \", a);\n    **q=20;\n    printf(\"%d \", a);\n    return 0;\n}\n", "option1": "A) 10 10 10", "option2": "B) 10 0 0", "option3": "C) 10 15 20", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C Program with pointers.?\nint main()\n{\n    int a=20;\n    int *p, *q;\n    p=&a;\n    q=p;\n    printf(\"%d \", a);\n    *p=30;\n    printf(\"%d \", a);\n    *q=40;\n    printf(\"%d \", a);\n    return 0;\n}\n", "option1": "A) 20 0 0", "option2": "B) 20 20 20", "option3": "C) 20 30 40", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C Program with pointers.?\nint main()\n{\n    int a=20;\n    //a memory location=1234\n    printf(\"%d %d %d\", a, &a, *(&a));\n    return 0;\n}\n", "option1": "A) 20 20 20", "option2": "B) 20 1234 1234", "option3": "C) 20 1234 20", "option4": "D) 20 20 20", "ans": "C"}, {"question": " What is the output of C Program with functions.?\nint main()\n{\n    int a=20;\n    printf(\"CINEMA \");\n    return 1;\n    printf(\"DINOSAUR\");\n    return 1;\n}\n", "option1": "A) CINEMA DINOSAUR", "option2": "B) CINEMA", "option3": "C) DINOSAUR", "option4": "D) Compiler error", "ans": "B"}, {"question": " What is the output of C Program with recursive function.?\nint sum(int);\nint main()\n{\n    int b;\n    b = sum(4);\n    printf(\"%d\", b);\n    \n}\nint sum(int x)\n{\n    int k=1;\n    if(x<=1)\n     return 1;\n    k = x + sum(x-1);\n    return k;\n}\n", "option1": "A) 10", "option2": "B) 11", "option3": "C) 12", "option4": "D) 15", "ans": "A"}, {"question": " What is the output of C Program with Recursive Function.?\nint mul(int);\nint main()\n{\n    int b;\n    b = mul(3);\n    printf(\"%d\", b);\n}\nint mul(int x)\n{\n    if(x<=1)\n     return 1;\n    return (x * mul(x-1));\n}\n", "option1": "A) 2", "option2": "B) 3", "option3": "C) 6", "option4": "D) 1", "ans": "C"}, {"question": " A recursive function can be replaced with __ in c language.", "option1": "A) for loop", "option2": "B) while loop", "option3": "C) do while loop", "option4": "D) All the above", "ans": "D"}, {"question": " A recursive function is faster than __ loop.", "option1": "A) for", "option2": "B) while", "option3": "C) do while", "option4": "D) None of the above", "ans": "D"}, {"question": " A recursive function without If and Else conditions will always lead to.?", "option1": "A) Finite loop", "option2": "B) Infinite loop", "option3": "C) Incorrect result", "option4": "D) Correct result", "ans": "B"}, {"question": " What is the C keyword that must be used to achieve expected result using Recursion.?", "option1": "A) printf", "option2": "B) scanf", "option3": "C) void", "option4": "D) return", "ans": "D"}, {"question": " How many functions are required to create a recursive functionality.?", "option1": "A) One", "option2": "B) Two", "option3": "C) More than two", "option4": "D) None of the above", "ans": "A"}, {"question": " Choose a correct statement about Recursive Function in C language.", "option1": "A) Each recursion creates new variables at different memory locations", "option2": "B) There is no limit on the number of Recursive calls", "option3": "C) Pointers can also be used with Recursion but with difficulty.", "option4": "D) All the above", "ans": "D"}]
