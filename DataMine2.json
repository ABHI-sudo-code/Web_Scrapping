[{"question": "What is a C Storage Class.?", "option1": "A) C Storage decides where to or which memory\u00a0store the variable.", "option2": "B) C Storage Class decides what is the default value of a variable.", "option3": "C) C Storage Class decides what is the Scope and Life of a variable.", "option4": "D) All the above.", "ans": "D"}, {"question": "Every C Variable must have.?", "option1": "A) Type", "option2": "B) Storage Class", "option3": "C) Both Type and Storage Class", "option4": "D) Either Type or Storage Class", "ans": "C"}, {"question": "Find a C Storage Class below.", "option1": "A) static", "option2": "B) auto", "option3": "C) register & extern", "option4": "D) All the above", "ans": "D"}, {"question": "What is the default C Storage Class for a variable.?", "option1": "A) static", "option2": "B) auto", "option3": "C) register", "option4": "D) extern", "ans": "B"}, {"question": "Choose a right answer.", "option1": "A) auto variable is stored in 'Memory'.\nstatic variable is stored in 'Memory'.\nextern variable is stored in 'Memory'.\nregister variable is stored in 'Memory'.", "option2": "B) auto variable is stored in 'Memory'.\nstatic variable is stored in 'Memory'.\nextern variable is stored in 'Memory'.\nregister variable is stored in 'Register'.", "option3": "C) auto variable is stored in 'Register'.\nstatic variable is stored in 'Register'.\nextern variable is stored in 'Register'.\nregister variable is stored in 'Memory'.", "option4": "D) auto variable is stored in 'Register'.\nstatic variable is stored in 'Register'.\nextern variable is stored in 'Register'.\nregister variable is stored in 'Register'.", "ans": "B"}, {"question": "A register variable is stored in a Register. Where does a Register Present in a Computer.?", "option1": "A) RAM ( Random Access Memory )", "option2": "B) ROM ( Read Only Memory )", "option3": "C) CPU (Central Processing Unit )", "option4": "D) DMA ( Direct Memory Access )", "ans": "C"}, {"question": "Variables of type auto, static and extern are all stored in .?", "option1": "A) ROM", "option2": "B) RAM", "option3": "C) CPU", "option4": "D) Compiler", "ans": "B"}, {"question": "Find a right answer.", "option1": "A) Default value of auto variable = Garbage Value\nDefault value of static = Garbage Value\nDefault value of extern = Garbage Value\nDefault value of register = Garbage Value", "option2": "B) Default value of auto variable = zero\nDefault value of static = zero\nDefault value of extern = zero\nDefault value of register = zero", "option3": "C) Default value of auto variable = Garbage\nDefault value of static = zero\nDefault value of extern = zero\nDefault value of register = Garbage", "option4": "D) Default value of auto variable = zero\nDefault value of static = Garbage\nDefault value of extern = Garbage\nDefault value of register = zero", "ans": "C"}, {"question": "Find a correct statement.", "option1": "A) Scope of auto variable = local to block or function\nScope of register variable = local to block or function\nScope of static variable = local to block or function\nScope of extern variable = global or available to all functions and blocks", "option2": "B) Scope of auto variable = global or available to all functions and blocks\nScope of register variable = global or available to all functions and blocks\nScope of static variable = global or available to all functions and blocks\nScope of extern variable = local to block or function", "option3": "C) Scope of auto variable = global or available to all functions and blocks\nScope of register variable =\u00a0 local to block or function\nScope of static variable = global or available to all functions and blocks\nScope of extern variable = local to block or function", "option4": "D) Scope of auto variable = local to block or function\nScope of register variable =\u00a0global or available to all functions and blocks\nScope of static variable =\u00a0local to block or function\nScope of extern variable = global or available to all functions and blocks", "ans": "A"}, {"question": " Choose a correct statement.", "option1": "A) Life of an auto variable = persists between function calls\nLife of an register variable = with in the block or function\nLife of an static variable = persists between function calls\nLife of an extern variable = until program ends", "option2": "B) Life of an auto variable = persists between function calls\nLife of an register variable = until program ends\nLife of an static variable = persists between function calls\nLife of an extern variable = with in the block or function", "option3": "C) Life of an auto variable = until program ends\nLife of an register variable = until program ends\nLife of an static variable = until program ends\nLife of an extern variable = until program ends", "option4": "D) Life of an auto variable = with in the block or function\nLife of an register variable = with in the block or function\nLife of an static variable = persists between function calls\nLife of an extern variable = until program ends", "ans": "D"}, {"question": " Which among the following is a Local Variable.?", "option1": "A) register", "option2": "B) auto", "option3": "C) static", "option4": "D) extern", "ans": "B"}, {"question": " Which among the following is a Global Variable.?", "option1": "A) auto", "option2": "B) register", "option3": "C) static\u00a0", "option4": "D) extern", "ans": "D"}, {"question": " Choose a correct statement about static variable.", "option1": "A) A static global variable can be accessed in other files.", "option2": "B) A static global variable can be used only in a file in which it is declared.", "option3": "C) A static global variable can not be declared without extern keyword.", "option4": "D) Default value of a static variable is -1.", "ans": "B"}, {"question": " register float a = 3.14f;\n\nChoose right statement.", "option1": "A) Variable a is stored in CPU registers for fast access.", "option2": "B) Variable a is converted to int and then stored in a CPU register.", "option3": "C) register Storage Class is ignored and treated as\nauto float a = 3.14f;\n", "option4": "D) You get a compiler error as you can not store non integer value in a CPU register.", "ans": "C"}, {"question": " What is the difference between Declaration and Definition.?", "option1": "A) Declaration does allocate memory for a variable.\nDefinition does allocate memory for a variable.", "option2": "B) Declaration does allocate memory for a variable.\nDefinition does not allocate memory for a variable.", "option3": "C) Declaration does not allocate memory for a variable.\nDefinition does allocate memory for a variable.", "option4": "D) Declaration does not allocate memory for a variable.\nDefinition does not allocate memory for a variable.", "ans": "C"}, {"question": " Choose a right statement.", "option1": "A) A non static global variable can not be used in included files.", "option2": "B) A non static global variable can be used or referred to inside included files.", "option3": "C) A non static global variable does not live\u00a0till the end of program execution.", "option4": "D) None of the above", "ans": "B"}, {"question": " Choose a right statement.", "option1": "A) Redeclaration of a variable is Ok.", "option2": "B) Redefinition of a variable is not Ok.", "option3": "C) Definition of a variable uses memory blocks.", "option4": "D) All the above.", "ans": "D"}, {"question": " Choose a correct statement.", "option1": "A) Register variables are usually fast retrieving variables.", "option2": "B) Static variables are usually maintain their values between function calls.", "option3": "C) Auto variables release their memory after the block or function where they are declared.", "option4": "D) All the above.", "ans": "D"}, {"question": " Choose a right statement.", "option1": "A) Variables of type auto are stored in Stack memory.", "option2": "B) Variable of type Static are stored in Segmented Memory.", "option3": "C) Variables of type register are stored in Micro Processor Memory.", "option4": "D) All the above.", "ans": "D"}, {"question": " Choose a right statement.", "option1": "A) Variables of type auto are initialized fresh for each block or function call.", "option2": "B) Variables of type static are initialized only first time the block or function is called.", "option3": "C) Variables of type register are initialized each time the block or function is executed.", "option4": "D) All the above.", "ans": "D"}]
