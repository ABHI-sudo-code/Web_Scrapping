[{"question": "What are the types of C Preprocessor Directives.?", "option1": "A) Macros", "option2": "B) Conditional Compilation", "option3": "C) File Inclusion", "option4": "D) All the above", "ans": "D"}, {"question": "Processor Directive in C language starts with.?", "option1": "A) $ symbol (DOLLAR)", "option2": "B) @ symbol (At The Rate)", "option3": "C) & symbol (Ampersand)", "option4": "D) # symbol (HASH)", "ans": "D"}, {"question": "Preprocessor in C language works on.?", "option1": "A) DOTC file (.c)", "option2": "B) DOTEXE file (.exe)", "option3": "C) DOTH file (.h)", "option4": "D) DOTCP file (.cp)", "ans": "A"}, {"question": "What is the another name for .C file.?", "option1": "A) Executable code", "option2": "B) Source Code", "option3": "C) Distributable Code", "option4": "D) Macro code", "ans": "B"}, {"question": "What is the keyword used to define a C macro.?", "option1": "A) def", "option2": "B) definition", "option3": "C) define", "option4": "D) defy", "ans": "C"}, {"question": "What is the output of C program with #define.?\n#define CVV 156\nint main()\n{\n    int a=10;\n    a = a*CVV;\n    printf(\"CVV=%d\",a);\n    return 0;\n}", "option1": "A) 0", "option2": "B) 1560", "option3": "C) 1560", "option4": "D) Compiler error", "ans": "C"}, {"question": "What is the C keyword used to create global Constants.?", "option1": "A) constant", "option2": "B) definition", "option3": "C) def", "option4": "D) define", "ans": "D"}, {"question": "Choose a correct C statement about #define statement.?\n#define CVV 156", "option1": "A) CVV is called Macro Expansion. 156 is called Macro Template.", "option2": "B) CVV is called Macro Expansion. 156 is also called Macro Expansion.", "option3": "C) CVV is called Macro Template. 156 is called Macro Expansion.", "option4": "D) None of the above", "ans": "C"}, {"question": "What is the output file generated after processing a .C file.?", "option1": "A) .h file", "option2": "B) .exe file", "option3": "C) .cp file", "option4": "D) .bak file", "ans": "B"}, {"question": " How do you safeguard your .C file code from copying by outside developers or world.?", "option1": "A) Encrypt a C\u00a0file and share", "option2": "B) Obfuscate a C file and share", "option3": "C) Scramble a C file and share", "option4": "D) Convert to Exe and share.", "ans": "D"}, {"question": " What is the output of C program with macros.?\n#define ERRMSG printf(\"Some error.\");\nint main()\n{\n    printf(\"JAR.\");\n    ERRMSG;\n    return 0;\n}", "option1": "A) JAR.", "option2": "B) JAR.ERRMSG", "option3": "C) JAR.Some error.", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C program with macros.?\n#define ERRMSG(a) printf(\"Error=%d\",a);\nint main()\n{\n    ERRMSG(10);\n    return 0;\n}", "option1": "A) ERRMSG(10)", "option2": "B) Error=", "option3": "C) Error=10", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C program.?\n#define LOGIC(a,b) (a==b)\nint main()\n{\n    if(LOGIC(5,5))\n    {\n        printf(\"SAME \");\n    }\n    return 0;\n}", "option1": "A) SAME", "option2": "B) LOGIC(5,5)", "option3": "C) 5==5", "option4": "D) Compiler error", "ans": "A"}, {"question": " How do you separate a multiline macro in C language.?", "option1": "A) Using * operator", "option2": "B) Using % operator", "option3": "C) Using \\\u00a0operator", "option4": "D) Using + operator", "ans": "C"}, {"question": " What is the output of C program.?\n#define LOOP(a) for(int i=1;i<=a;i++) \\\n{printf(\"%d \",i);}\nint main()\n{\n    LOOP(5);\n    return 0;\n}", "option1": "A) 5", "option2": "B) 5 5 5 5 5", "option3": "C) 1 2 3 4 5", "option4": "D) Compiler error", "ans": "D"}, {"question": " What is the output of C program.?\n#define TANK(a) a*10+2\nint main()\n{\n    int a = TANK(2)*2;\n    printf(\"%d\",a);\n    return 0;\n}", "option1": "A) 44", "option2": "B) 22", "option3": "C) 24", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the file extension of expanded source code of .C file after preprocessing.?", "option1": "A) .e\u00a0file", "option2": "B) .h\u00a0file", "option3": "C) .l file", "option4": "D) .p file", "ans": "C"}, {"question": " What is the command to preprocess a C file manually.?", "option1": "A) pp abc.c", "option2": "B) cpp abc.c", "option3": "C) exp abc.c", "option4": "D) op abc.c", "ans": "B"}, {"question": " Choose a correct statement about C Macro.?", "option1": "A) Macro template(eg. PI or function) will be replaced by Macro Expansion(3.1428) as many number of times as it appears in the C program increasing Source Code size in bytes.", "option2": "B) Macros increase program speed when compared to functions.", "option3": "C) Functions use less memory as the program code is written and placed only one place in source code. Macros put function code everywhere it is called again and again.", "option4": "D) All the above", "ans": "D"}, {"question": " What is the C Preprocessor directive to be used to add a header file or any file to existing C program.?", "option1": "A) #add", "option2": "B) #present", "option3": "C) #include", "option4": "D) $include", "ans": "C"}]
