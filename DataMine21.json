[{"question": "What is the limit for number of functions in a C Program.?", "option1": "A) 16", "option2": "B) 31", "option3": "C) 32", "option4": "D) None of the above", "ans": "D"}, {"question": "Every C Program should contain which function.?", "option1": "A) printf()", "option2": "B) show()", "option3": "C) scanf()", "option4": "D) main()", "ans": "D"}, {"question": "What is the minimum number of functions to be present in a C Program.?", "option1": "A) 1", "option2": "B) 2", "option3": "C) 3", "option4": "D) 4", "ans": "A"}, {"question": "What is the output of C Program with functions.?\nstatic void show();\n\nint main()\n{\n    printf(\"ROCKET \");\n    show();\n    return 0;\n}\n\nstatic void show()\n{\n    printf(\"STATIC\");\n}\n", "option1": "A) ROCKET", "option2": "B) ROCKET STATIC", "option3": "C) STATIC ROCKET", "option4": "D) Compiler error", "ans": "B"}, {"question": "What is the maximum number of statements that can present in a C function.?", "option1": "A) 64", "option2": "B) 128", "option3": "C) 256", "option4": "D) None of the above", "ans": "D"}, {"question": "What characters are allowed in a C function name identifier.?", "option1": "A) Alphabets, Numbers, %, $, _", "option2": "B) Alphabets, Numbers, Underscore ( _ )", "option3": "C) Alphabets, Numbers, dollar $", "option4": "D) Alphabets, Numbers, %", "ans": "B"}, {"question": "What is the output of C Program with functions and pointers.?\nint main()\n{\n    int b=25;\n    //b memory location=1234;\n    int *p = b;\n    printf(\"%d %d\", b, p);\n\n    return 0;\n}\n", "option1": "A) 25 1234", "option2": "B) 25 0", "option3": "C) 25 25", "option4": "D) Compiler error", "ans": "C"}, {"question": "What is the output of C Program with functions and pointers.?\nint main()\n{\n    int b=25;\n    //b memory location=1234;\n    int *p;\n    p=&b;\n    printf(\"%d %d %d\", &b, p);\n    return 0;\n}\n", "option1": "A) 25 25", "option2": "B) 1234 1234", "option3": "C) 25 1234", "option4": "D) 1234 25", "ans": "B"}, {"question": "What do you call STAR\u00a0*\u00a0and\u00a0Ampersand &\u00a0in a c program context.?\nint a=10, *p;\np = &a;\nprintf(\"%d %d\", a, *p);\n", "option1": "A) * = ADDRESS OF operator, & = VALUE AT operator", "option2": "B) * = ADDRESS OF operator, & = ADDRESS OF operator", "option3": "C) * = VALUE AT\u00a0operator, & = ADDRESS OF operator", "option4": "D) * = VALUE AT\u00a0operator, & = VALUE AT operator", "ans": "C"}, {"question": " What is the output of C Program with functions.?\n#include \nint sum(int,int);\nint main()\n{\n    int a=5, b=10, mysum;\n    mysum = sum(a,b);\n    printf(\"SUM=%d \", mysum);\n    printf(\"SUM=%d\", sum(10,20));\n    return 0;\n}\nint sum(int i, int j)\n{\n    return (i+j);\n}\n", "option1": "A) SUM=15 SUM=30", "option2": "B) SUM=30 SUM=15", "option3": "C) SUM=15 SUM=15", "option4": "D) SUM=30 SUM=30", "ans": "A"}, {"question": " Arguments passed to a function in\u00a0C language are called ___ arguments.", "option1": "A) Formal arguments", "option2": "B) Actual Arguments", "option3": "C) Definite Arguments", "option4": "D) Ideal Arguments", "ans": "B"}, {"question": " Arguments received by a function in C language are called ___ arguments.", "option1": "A) Definite arguments", "option2": "B) Formal arguments", "option3": "C) Actual arguments", "option4": "D) Ideal arguments", "ans": "B"}, {"question": " Choose a corrects statement about C language function arguments.", "option1": "A) Number of arguments should be same when sending and receiving", "option2": "B) Type of each argument should match exactly\u00a0", "option3": "C) Order of each argument should be same", "option4": "D) All the above", "ans": "D"}, {"question": " What is the output of C program with functions.?\nint main()\n{\n    printf(\"funny=%d\" , funny());\n    return 0;\n}\nfunny()\n{\n   \n}\n", "option1": "A) funny=", "option2": "B) funny=1", "option3": "C) funny=0", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C Program with functions.?\nvoid funny2();\nint main()\n{\n    printf(\"funny2=%d\" , funny2());\n    return 0;\n}\nvoid funny2()\n{\n\n}\n", "option1": "A) funny2=", "option2": "B) funny2=0", "option3": "C) funny2=1", "option4": "D) Compiler error", "ans": "D"}, {"question": " Choose a correct statement with C Functions.", "option1": "A) A function can call any other function any number of times", "option2": "B) You can write any function in any order in a multi function C File.", "option3": "C) You can refer to or call any function using a Pointer also.", "option4": "D) All the above", "ans": "D"}, {"question": " Choose a non Library C function below.", "option1": "A) printf()", "option2": "B) scanf()", "option3": "C) fprintf()", "option4": "D) printf2()", "ans": "D"}, {"question": " What is the default return value of a C function if not specified explicitly.?", "option1": "A) -1", "option2": "B) 0", "option3": "C) 1", "option4": "D) None of the above", "ans": "C"}, {"question": " What do you call this C Function calling itself.?\nint funny2()\n{\n    funny2(num);\n}\n", "option1": "A) Indefinite Function", "option2": "B) Definite Function", "option3": "C) Cursive Function", "option4": "D) Recursive Function", "ans": "D"}, {"question": " What is the output of C Program with functions.?\nint bunny(int,int);\nint main()\n{\n    int a, b;\n    a = bunny(5, 10);\n    b = bunny(10, 5);\n    printf(\"%d %d\", a, b);\n    return 0;\n}\nint bunny(int i, int j)\n{\n    return (i, j);\n}\n", "option1": "A) 5 10", "option2": "B) 10 5", "option3": "C) 5 5", "option4": "D) Compiler error", "ans": "B"}]
