[{"question": "What is the output of C program with arrays and pointers.?\nint main()\n{\n    int size=4;\n    int a[size];\n    a[0]=5;a[1]=6;\n    a[2]=7;a[3]=8;\n    printf(\"%d %d\", *(a+2), a[1]);\n}\n", "option1": "A) 8 6", "option2": "B) 7 6", "option3": "C) 6 6", "option4": "D) Compiler error", "ans": "B"}, {"question": "What is the output of C program with arrays.?\nint main()\n{\n    int ary(3)=[20,30,40];\n    printf(\"%d\", a(1));\n}\n", "option1": "A) 20", "option2": "B) 30", "option3": "C) 0", "option4": "D) Compiler error", "ans": "D"}, {"question": "What is the output of C Program with arrays.?\nint main()\n{\n    int rollno[3]=[1001,1002,1003];\n    printf(\"%d\", rollno[1]);\n}\n", "option1": "A) 1002", "option2": "B) 1003", "option3": "C) address of 1002", "option4": "D) Compiler error", "ans": "D"}, {"question": "What is the output of C program with arrays.?\nint main()\n{\n   char grade={'A','B','C'};\n   printf(\"%c\", grade[0]);\n}\n", "option1": "A) A", "option2": "B) B", "option3": "C) C", "option4": "D) Compiler error", "ans": "D"}, {"question": "What is the value of an array element which is not initialized.?", "option1": "A) By default Zero 0", "option2": "B) 1", "option3": "C) Depends on Storage Class", "option4": "D) None of the above.", "ans": "C"}, {"question": "What happens when you try to access an Array variable outside its Size.?", "option1": "A) Compiler error is thrown", "option2": "B) 0 value will be returned", "option3": "C) 1 value will be returned", "option4": "D) Some garbage value will be returned.", "ans": "D"}, {"question": "What is the size of an array in the below C program statement.?\nint main()\n{\n    int ary[9];\n    return 0;\n}\n", "option1": "A) 8", "option2": "B) 9", "option3": "C) 10", "option4": "D) None of the above", "ans": "B"}, {"question": "What is the minimum and maximum Indexes of this below array.?\nint main()\n{\n    int ary[9];\n    return 0;\n}\n", "option1": "A) -1, 8", "option2": "B) 0, 8", "option3": "C) 1,9", "option4": "D) None of the above", "ans": "B"}, {"question": "Can we change the starting index of an array from 0 to 1 in any way.?", "option1": "A) Yes. Through pointers.", "option2": "B) Yes. Through Call by Value.", "option3": "C) Yes. Through Call by Reference.", "option4": "D) None of the above.", "ans": "D"}, {"question": " What is the need for C arrays.?", "option1": "A) You need not create so many separate variables and get confused while using.", "option2": "B) Using a single Array variable, you can access all elements of the array easily.", "option3": "C) Code maintainability is easy for programmers and maintainers.", "option4": "D) All the above.", "ans": "D"}, {"question": " What is the output of C program with arrays.?\nint main()\n{\n    int ary[4], size=4;\n    printf(\"%d \", ary[size]);\n    return 0;\n}\n", "option1": "A) 0", "option2": "B) 1", "option3": "C) Random number", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is the output of C Program with arrays.?\nint main()\n{\n    int ary[4];\n    ary[4] = {1,2,3,4};\n    printf(\"%d \", ary[2]);\n    return 0;\n}\n", "option1": "A) 2", "option2": "B) 3", "option3": "C) 0", "option4": "D) Compiler error", "ans": "D"}, {"question": " What is the output of C Program with arrays.?\nint main()\n{\n    int ary[3]={1,2};\n    printf(\"%d %d\",ary[2]);\n    return 0;\n}\n", "option1": "A) 0", "option2": "B) 2", "option3": "C) Garbage value", "option4": "D) Compiler error", "ans": "C"}, {"question": " What is a multidimensional array in C Language.?", "option1": "A) It is like a matrix or table with rows and columns", "option2": "B) It is an array of arrays", "option3": "C) To access 3rd tow 2nd element use ary[2][1] as the index starts from 0 row or column", "option4": "D) All the above.", "ans": "D"}, {"question": " If an integer array pointer\u00a0is incremented, how many bytes will be skipped to reach next element location.?", "option1": "A) 1", "option2": "B) 2", "option3": "C) 8", "option4": "D) None of the above", "ans": "B"}, {"question": " What is the output of C Program with arrays and pointers.?\nint main()\n{\n    int ary[] = {10,20,30}, *p;\n    p = &ary[0];\n    int i=0;\n    while(i<3)\n    {\n        printf(\"%d \", *p);\n        p++;\n        i++;\n    }\n    return 0;\n}\n", "option1": "A) 10 10 10", "option2": "B) 10 20 20", "option3": "C) 10 20 30", "option4": "D) randomvalue randomvalue randomvalue", "ans": "C"}, {"question": " What is the function used to allocate memory to an array at run time with Zero initial value to each.?", "option1": "A) calloc()", "option2": "B) malloc()", "option3": "C) palloc()", "option4": "D) kalloc()", "ans": "A"}, {"question": " What is the function used to allocate memory to an array at run time without initializing array elements.?", "option1": "A) calloc()", "option2": "B) malloc()", "option3": "C) palloc()", "option4": "D) kalloc()", "ans": "B"}, {"question": " Choose a correct Syntax for malloc() function to allocate memory to an array at run time.", "option1": "A) int *p;\np = (int*)malloc(10*sizeof(int));\n", "option2": "B) int *p;\np = (int*)malloc(10,sizeof(int));\n", "option3": "C) int *p;\np = (int*)malloc(sizeof(int), 10);\n", "option4": "D) int *p;\np = (int*)malloc(10*sizeof(int *));\n", "ans": "A"}, {"question": " What is the syntax of CALLOC to allocate memory to an array at runtime.?", "option1": "A) int *p;\np = (int*)calloc(10, sizeof(int));\n", "option2": "B) int *p;\np = (int*)calloc(10*sizeof(int));\n", "option3": "C) int *p;\np = (int*)calloc(sizeof(int), 10);\n", "option4": "D) int *p;\np = (int*)calloc(10, sizeof(int *));\n", "ans": "A"}]
