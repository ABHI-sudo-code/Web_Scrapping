[{"question": "What is the dimension of the C array int ary[10][5].?", "option1": "A) 1", "option2": "B) 2", "option3": "C) 5", "option4": "D) 10", "ans": "B"}, {"question": "What is the dimension of the below C Array.?\nint ary[]={1,3,5,7};", "option1": "A) 1", "option2": "B) 2", "option3": "C) 3", "option4": "D) 5", "ans": "A"}, {"question": "Choose a correct statement with array pointers.", "option1": "A) It is valid to add an integer number to an array pointer. Result can be anything.", "option2": "B) It is valid to subtract an integer number from array pointer. Result can be anything.", "option3": "C) Difference of pointers to two elements of an array gives the difference between their indexes.", "option4": "D) All the above", "ans": "D"}, {"question": "Choose correct statement about C array pointers.", "option1": "A) You can compare two array elements with *p == *(p+i)", "option2": "B) You can compare two pointers with p1==p2.", "option3": "C) Accessing out of bounds index element is valid and it returns a garbage value.", "option4": "D) All the above.", "ans": "D"}, {"question": "What is the output of C Program with arrays.?\nint main()\n{\n    int ary[] = {1, 3, 5};\n    printf(\"%d %d\", ary[-1], ary[4]);\n    return 0;\n}\n", "option1": "A) 1 5", "option2": "B) 0 0\u00a0", "option3": "C) Compiler error", "option4": "D) None of the above", "ans": "D"}, {"question": "What is the output of C Program with arrays.?\nint main()\n{\n    static int ary[] = {1, 3, 5};\n    printf(\"%d %d\", ary[-1], ary[5]);\n    return 0;\n}\n", "option1": "A) 0 0", "option2": "B) -1 -1", "option3": "C) Compiler error", "option4": "D) None of the above", "ans": "A"}, {"question": "What is the output of C Program with arrays and pointers.?\nint main()\n{\n    int ary[] = {11, 33, 55};\n    int *p, *q;\n    p = ary;\n    q = ary+2;\n    printf(\"%d %d\",*p, *q);\n    return 0;\n}\n", "option1": "A) 11 55", "option2": "B) 11 13", "option3": "C) 11 33", "option4": "D) Compiler error", "ans": "A"}, {"question": "Difference between C Arrays, ary[10] and cry[10][10] is.?", "option1": "A) ary[10] is a single dimensional array. cry[10][10] is a Multidimensional array.", "option2": "B) ary[10] is a multidimensional array. cry[10][10] is a single dimensional array.", "option3": "C) Size of ary[10] is sizeof(10* int). Size of cry[10][10] is sizeof(10*int).", "option4": "D) None of the above.", "ans": "A"}, {"question": "Array of Arrays is also called.?", "option1": "A) Multi Data Array", "option2": "B) Multi Size Array", "option3": "C) Multi Dimensional Array", "option4": "D) Multi Byte Array", "ans": "C"}, {"question": " What is the output of C program with\u00a0multidimensional array.?\nint main()\n{\n    int ary[3][2] = {1,2,3,4,5,6};\n    printf(\"%d %d\", ary[0][0], ary[2][1]);\n    return 0;\n}", "option1": "A) 2 5", "option2": "B) 1 6", "option3": "C) 1 5", "option4": "D) 2 6", "ans": "B"}, {"question": " What is the output of C program with multidimensional arrays.?\nint main()\n{\n    int ary[3][] = {6,5,4,3,2,1};\n    printf(\"%d %d\", ary[0][0], ary[2][1]);\n    return 0;\n}", "option1": "A) 6 1", "option2": "B) 6 2", "option3": "C) 5 1", "option4": "D) Compiler error", "ans": "D"}, {"question": " What is the output of C program with multidimensional arrays.?\nint main()\n{\n    int ary[][3] = {6,5,4,3,2,1};\n    printf(\"%d %d\", ary[0][0], ary[1][0]);\n    return 0;\n}", "option1": "A) 6 2", "option2": "B) 6 3", "option3": "C) 6 1", "option4": "D) Compiler error", "ans": "B"}, {"question": " Choose an alternative definition of C Multidimensional array.?\nint ary[][3] = {6,5,4,3,2,1};", "option1": "A) int ary[2][3] = {6,5,4,3,2,1};", "option2": "B) int ary[2][3] = {{6,5,4},{3,2,1}};", "option3": "C) int ary[][3] = {{6,5,4},{3,2,1}};", "option4": "D) All the above.", "ans": "D"}, {"question": " What is the output of C Program with arrays.?\nint main()\n{\n    int ary[][2][3] = {\n        {{1,2,3},{4,5,6}},\n        {{7,8,9},{10,11,12}}\n    };\n    printf(\"%d %d\", ary[0][0][0], ary[1][1][1]);\n    return 0;\n}", "option1": "A) 1 12", "option2": "B) 1 11", "option3": "C) 7 12", "option4": "D) 1 6", "ans": "B"}, {"question": " Choose a correct statement about a C Multidimensional array.", "option1": "A) First Dimension size is optional when initializing the array at the same time.", "option2": "B) Last Dimension size is optional when initializing the array at the same time.", "option3": "C) It is a must to specify all dimensions of a multidimensional array.", "option4": "D) Memory locations of elements of a multidimensional array is not sequential.", "ans": "A"}, {"question": " What is the output of C Program.?\nint main()\n{\n    int ary[2][2][3] = {\n        {{1,2,3},{4,5,6}},\n        {{7,8,9},{10,11,12}}\n    };\n    int *p;\n    p = &ary;\n    printf(\"%d %d\",*p, *p+11);\n    return 0;\n}", "option1": "A) 1 11", "option2": "B) 1 12", "option3": "C) 2 12", "option4": "D) Compiler error", "ans": "B"}, {"question": " What is the output of C Program.?\nint main()\n{\n    int ary[2][2][3] = {\n        {{1,2,3},{4,5,6}},\n        {{7,8,9},{10,11,12}}\n    };\n    printf(\"%d\",*(*(*(ary+1)+ 1)+2));\n    return 0;\n}", "option1": "A) 10", "option2": "B) 11", "option3": "C) 12", "option4": "D) Compiler error", "ans": "C"}, {"question": " Choose a correct C Statement to choose number 66\u00a0in the array, int ary[3][2] = {{11,22},{33,44},{55,66}};", "option1": "A) ary[2][1]", "option2": "B) *(*(ary+2)+1)", "option3": "C) *ary[2]+1", "option4": "D) All the above", "ans": "D"}, {"question": " A multidimensional array of dimension N is a collection of.?", "option1": "A) Single Dimensional Arrays", "option2": "B) N dimensional arrays", "option3": "C) N-1 dimension arrays", "option4": "D) N-2 dimension arrays", "ans": "C"}, {"question": " Choose a correct statement about a Multidimensional array and pointer.?", "option1": "A) int *ptr[N] is an array of N integer pointers. Size is N * sizeof(1*int).", "option2": "B) int (*ptr)[N] is a pointer to an array of N elements. Size of ptr is size of 1 integer.", "option3": "C) An multidimensional array or a single dimensional array can contain pointer elements.", "option4": "D) All the above", "ans": "D"}]
